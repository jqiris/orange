// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.0
// source: protos.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MsgId int32

const (
	MsgId_MsgChan         MsgId = 0 //通道消息
	MsgId_MsgLogin        MsgId = 1 //登录
	MsgId_MsgLogout       MsgId = 2 //登出
	MsgId_MsgOffline      MsgId = 3 //断线
	MsgId_MsgMjRoomCreate MsgId = 4 //创建麻将房间
)

// Enum value maps for MsgId.
var (
	MsgId_name = map[int32]string{
		0: "MsgChan",
		1: "MsgLogin",
		2: "MsgLogout",
		3: "MsgOffline",
		4: "MsgMjRoomCreate",
	}
	MsgId_value = map[string]int32{
		"MsgChan":         0,
		"MsgLogin":        1,
		"MsgLogout":       2,
		"MsgOffline":      3,
		"MsgMjRoomCreate": 4,
	}
)

func (x MsgId) Enum() *MsgId {
	p := new(MsgId)
	*p = x
	return p
}

func (x MsgId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgId) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_proto_enumTypes[0].Descriptor()
}

func (MsgId) Type() protoreflect.EnumType {
	return &file_protos_proto_enumTypes[0]
}

func (x MsgId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgId.Descriptor instead.
func (MsgId) EnumDescriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{0}
}

//request
type MsgRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId MsgId `protobuf:"varint,1,opt,name=msg_id,json=msgId,proto3,enum=protos.MsgId" json:"msg_id,omitempty"`
	// Types that are assignable to Any:
	//	*MsgRequest_LoginRequest
	//	*MsgRequest_LogoutRequest
	//	*MsgRequest_OfflineRequest
	//	*MsgRequest_MjRoomCreateRequest
	Any isMsgRequest_Any `protobuf_oneof:"any"`
}

func (x *MsgRequest) Reset() {
	*x = MsgRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRequest) ProtoMessage() {}

func (x *MsgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRequest.ProtoReflect.Descriptor instead.
func (*MsgRequest) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{0}
}

func (x *MsgRequest) GetMsgId() MsgId {
	if x != nil {
		return x.MsgId
	}
	return MsgId_MsgChan
}

func (m *MsgRequest) GetAny() isMsgRequest_Any {
	if m != nil {
		return m.Any
	}
	return nil
}

func (x *MsgRequest) GetLoginRequest() *LoginRequest {
	if x, ok := x.GetAny().(*MsgRequest_LoginRequest); ok {
		return x.LoginRequest
	}
	return nil
}

func (x *MsgRequest) GetLogoutRequest() *LogoutRequest {
	if x, ok := x.GetAny().(*MsgRequest_LogoutRequest); ok {
		return x.LogoutRequest
	}
	return nil
}

func (x *MsgRequest) GetOfflineRequest() *OfflineRequest {
	if x, ok := x.GetAny().(*MsgRequest_OfflineRequest); ok {
		return x.OfflineRequest
	}
	return nil
}

func (x *MsgRequest) GetMjRoomCreateRequest() *MjRoomCreateRequest {
	if x, ok := x.GetAny().(*MsgRequest_MjRoomCreateRequest); ok {
		return x.MjRoomCreateRequest
	}
	return nil
}

type isMsgRequest_Any interface {
	isMsgRequest_Any()
}

type MsgRequest_LoginRequest struct {
	LoginRequest *LoginRequest `protobuf:"bytes,2,opt,name=login_request,json=loginRequest,proto3,oneof"` //登陆
}

type MsgRequest_LogoutRequest struct {
	LogoutRequest *LogoutRequest `protobuf:"bytes,3,opt,name=logout_request,json=logoutRequest,proto3,oneof"` //登出
}

type MsgRequest_OfflineRequest struct {
	OfflineRequest *OfflineRequest `protobuf:"bytes,4,opt,name=offline_request,json=offlineRequest,proto3,oneof"` //断线
}

type MsgRequest_MjRoomCreateRequest struct {
	MjRoomCreateRequest *MjRoomCreateRequest `protobuf:"bytes,5,opt,name=mj_room_create_request,json=mjRoomCreateRequest,proto3,oneof"` //创建麻将房间
}

func (*MsgRequest_LoginRequest) isMsgRequest_Any() {}

func (*MsgRequest_LogoutRequest) isMsgRequest_Any() {}

func (*MsgRequest_OfflineRequest) isMsgRequest_Any() {}

func (*MsgRequest_MjRoomCreateRequest) isMsgRequest_Any() {}

type MjRoomCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"` //用户id
	Gid int32 `protobuf:"varint,2,opt,name=gid,proto3" json:"gid,omitempty"` //游戏id
}

func (x *MjRoomCreateRequest) Reset() {
	*x = MjRoomCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MjRoomCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MjRoomCreateRequest) ProtoMessage() {}

func (x *MjRoomCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MjRoomCreateRequest.ProtoReflect.Descriptor instead.
func (*MjRoomCreateRequest) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{1}
}

func (x *MjRoomCreateRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *MjRoomCreateRequest) GetGid() int32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token  string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Roomid int32  `protobuf:"varint,2,opt,name=roomid,proto3" json:"roomid,omitempty"`
	Time   int64  `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	Sign   string `protobuf:"bytes,4,opt,name=sign,proto3" json:"sign,omitempty"` //签名
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{2}
}

func (x *LoginRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginRequest) GetRoomid() int32 {
	if x != nil {
		return x.Roomid
	}
	return 0
}

func (x *LoginRequest) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *LoginRequest) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

type LogoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"` //用户id
}

func (x *LogoutRequest) Reset() {
	*x = LogoutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutRequest) ProtoMessage() {}

func (x *LogoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutRequest.ProtoReflect.Descriptor instead.
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{3}
}

func (x *LogoutRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type OfflineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"` //用户id
}

func (x *OfflineRequest) Reset() {
	*x = OfflineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfflineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflineRequest) ProtoMessage() {}

func (x *OfflineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflineRequest.ProtoReflect.Descriptor instead.
func (*OfflineRequest) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{4}
}

func (x *OfflineRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

//response
type MsgResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errcode int32  `protobuf:"varint,1,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg  string `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	// Types that are assignable to Any:
	//	*MsgResponse_LoginResponse
	//	*MsgResponse_LogoutResponse
	//	*MsgResponse_MjRoomCreateResponse
	Any isMsgResponse_Any `protobuf_oneof:"any"`
}

func (x *MsgResponse) Reset() {
	*x = MsgResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgResponse) ProtoMessage() {}

func (x *MsgResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgResponse.ProtoReflect.Descriptor instead.
func (*MsgResponse) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{5}
}

func (x *MsgResponse) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *MsgResponse) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

func (m *MsgResponse) GetAny() isMsgResponse_Any {
	if m != nil {
		return m.Any
	}
	return nil
}

func (x *MsgResponse) GetLoginResponse() *LoginResponse {
	if x, ok := x.GetAny().(*MsgResponse_LoginResponse); ok {
		return x.LoginResponse
	}
	return nil
}

func (x *MsgResponse) GetLogoutResponse() *LogoutResponse {
	if x, ok := x.GetAny().(*MsgResponse_LogoutResponse); ok {
		return x.LogoutResponse
	}
	return nil
}

func (x *MsgResponse) GetMjRoomCreateResponse() *MjRoomCreateResponse {
	if x, ok := x.GetAny().(*MsgResponse_MjRoomCreateResponse); ok {
		return x.MjRoomCreateResponse
	}
	return nil
}

type isMsgResponse_Any interface {
	isMsgResponse_Any()
}

type MsgResponse_LoginResponse struct {
	LoginResponse *LoginResponse `protobuf:"bytes,3,opt,name=login_response,json=loginResponse,proto3,oneof"`
}

type MsgResponse_LogoutResponse struct {
	LogoutResponse *LogoutResponse `protobuf:"bytes,4,opt,name=logout_response,json=logoutResponse,proto3,oneof"`
}

type MsgResponse_MjRoomCreateResponse struct {
	MjRoomCreateResponse *MjRoomCreateResponse `protobuf:"bytes,5,opt,name=mj_room_create_response,json=mjRoomCreateResponse,proto3,oneof"` //创建麻将房间回复
}

func (*MsgResponse_LoginResponse) isMsgResponse_Any() {}

func (*MsgResponse_LogoutResponse) isMsgResponse_Any() {}

func (*MsgResponse_MjRoomCreateResponse) isMsgResponse_Any() {}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                              // 用户id
	Nickname  string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`                     //昵称
	Avatar    string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                         //头像
	Gender    int32  `protobuf:"varint,4,opt,name=gender,proto3" json:"gender,omitempty"`                        //性别
	RegTime   int64  `protobuf:"varint,5,opt,name=reg_time,json=regTime,proto3" json:"reg_time,omitempty"`       //注册时间
	LoginTime int64  `protobuf:"varint,6,opt,name=login_time,json=loginTime,proto3" json:"login_time,omitempty"` //登录时间
	IsNew     bool   `protobuf:"varint,7,opt,name=is_new,json=isNew,proto3" json:"is_new,omitempty"`             //是否是新手
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{6}
}

func (x *LoginResponse) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *LoginResponse) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *LoginResponse) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *LoginResponse) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *LoginResponse) GetRegTime() int64 {
	if x != nil {
		return x.RegTime
	}
	return 0
}

func (x *LoginResponse) GetLoginTime() int64 {
	if x != nil {
		return x.LoginTime
	}
	return 0
}

func (x *LoginResponse) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

type LogoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LogoutResponse) Reset() {
	*x = LogoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutResponse) ProtoMessage() {}

func (x *LogoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutResponse.ProtoReflect.Descriptor instead.
func (*LogoutResponse) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{7}
}

type MjRoomCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` //创建房间号
	Sid  string `protobuf:"bytes,2,opt,name=sid,proto3" json:"sid,omitempty"`    //创建服务器id
	Tid  int64  `protobuf:"varint,3,opt,name=tid,proto3" json:"tid,omitempty"`   //创建桌号
}

func (x *MjRoomCreateResponse) Reset() {
	*x = MjRoomCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MjRoomCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MjRoomCreateResponse) ProtoMessage() {}

func (x *MjRoomCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MjRoomCreateResponse.ProtoReflect.Descriptor instead.
func (*MjRoomCreateResponse) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{8}
}

func (x *MjRoomCreateResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MjRoomCreateResponse) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *MjRoomCreateResponse) GetTid() int64 {
	if x != nil {
		return x.Tid
	}
	return 0
}

type ChessConfigMultiple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []int32 `protobuf:"varint,1,rep,packed,name=list,proto3" json:"list,omitempty"` //多选内容
}

func (x *ChessConfigMultiple) Reset() {
	*x = ChessConfigMultiple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChessConfigMultiple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChessConfigMultiple) ProtoMessage() {}

func (x *ChessConfigMultiple) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChessConfigMultiple.ProtoReflect.Descriptor instead.
func (*ChessConfigMultiple) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{9}
}

func (x *ChessConfigMultiple) GetList() []int32 {
	if x != nil {
		return x.List
	}
	return nil
}

type ChessConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string           `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`                                                                                                //麻将类型
	Choices map[string]int32 `protobuf:"bytes,2,rep,name=choices,proto3" json:"choices,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //选择
}

func (x *ChessConfig) Reset() {
	*x = ChessConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChessConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChessConfig) ProtoMessage() {}

func (x *ChessConfig) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChessConfig.ProtoReflect.Descriptor instead.
func (*ChessConfig) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{10}
}

func (x *ChessConfig) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ChessConfig) GetChoices() map[string]int32 {
	if x != nil {
		return x.Choices
	}
	return nil
}

//base struct
type RoomConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Zimo        int32  `protobuf:"varint,2,opt,name=zimo,proto3" json:"zimo,omitempty"`
	Jiangdui    bool   `protobuf:"varint,3,opt,name=jiangdui,proto3" json:"jiangdui,omitempty"`
	Hsz         bool   `protobuf:"varint,4,opt,name=hsz,proto3" json:"hsz,omitempty"`
	Dianganghua int32  `protobuf:"varint,5,opt,name=dianganghua,proto3" json:"dianganghua,omitempty"`
	Menqing     bool   `protobuf:"varint,6,opt,name=menqing,proto3" json:"menqing,omitempty"`
	Tiandihu    bool   `protobuf:"varint,7,opt,name=tiandihu,proto3" json:"tiandihu,omitempty"`
	BaseScore   int32  `protobuf:"varint,8,opt,name=baseScore,proto3" json:"baseScore,omitempty"`
	MaxFan      int32  `protobuf:"varint,9,opt,name=maxFan,proto3" json:"maxFan,omitempty"`
	MaxGames    int32  `protobuf:"varint,10,opt,name=maxGames,proto3" json:"maxGames,omitempty"`
	Creator     int64  `protobuf:"varint,11,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (x *RoomConf) Reset() {
	*x = RoomConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomConf) ProtoMessage() {}

func (x *RoomConf) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomConf.ProtoReflect.Descriptor instead.
func (*RoomConf) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{11}
}

func (x *RoomConf) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RoomConf) GetZimo() int32 {
	if x != nil {
		return x.Zimo
	}
	return 0
}

func (x *RoomConf) GetJiangdui() bool {
	if x != nil {
		return x.Jiangdui
	}
	return false
}

func (x *RoomConf) GetHsz() bool {
	if x != nil {
		return x.Hsz
	}
	return false
}

func (x *RoomConf) GetDianganghua() int32 {
	if x != nil {
		return x.Dianganghua
	}
	return 0
}

func (x *RoomConf) GetMenqing() bool {
	if x != nil {
		return x.Menqing
	}
	return false
}

func (x *RoomConf) GetTiandihu() bool {
	if x != nil {
		return x.Tiandihu
	}
	return false
}

func (x *RoomConf) GetBaseScore() int32 {
	if x != nil {
		return x.BaseScore
	}
	return 0
}

func (x *RoomConf) GetMaxFan() int32 {
	if x != nil {
		return x.MaxFan
	}
	return 0
}

func (x *RoomConf) GetMaxGames() int32 {
	if x != nil {
		return x.MaxGames
	}
	return 0
}

func (x *RoomConf) GetCreator() int64 {
	if x != nil {
		return x.Creator
	}
	return 0
}

type DissolveData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndTime int64  `protobuf:"varint,1,opt,name=endTime,proto3" json:"endTime,omitempty"`
	States  []bool `protobuf:"varint,2,rep,packed,name=states,proto3" json:"states,omitempty"`
}

func (x *DissolveData) Reset() {
	*x = DissolveData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DissolveData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DissolveData) ProtoMessage() {}

func (x *DissolveData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DissolveData.ProtoReflect.Descriptor instead.
func (*DissolveData) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{12}
}

func (x *DissolveData) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *DissolveData) GetStates() []bool {
	if x != nil {
		return x.States
	}
	return nil
}

type TingData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fan     int32  `protobuf:"varint,1,opt,name=fan,proto3" json:"fan,omitempty"`
	Pattern string `protobuf:"bytes,2,opt,name=pattern,proto3" json:"pattern,omitempty"`
}

func (x *TingData) Reset() {
	*x = TingData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TingData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TingData) ProtoMessage() {}

func (x *TingData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TingData.ProtoReflect.Descriptor instead.
func (*TingData) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{13}
}

func (x *TingData) GetFan() int32 {
	if x != nil {
		return x.Fan
	}
	return 0
}

func (x *TingData) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

type ActionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string      `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Owner    *Seat       `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	State    string      `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	PayTimes int32       `protobuf:"varint,4,opt,name=payTimes,proto3" json:"payTimes,omitempty"`
	Ref      *ActionData `protobuf:"bytes,5,opt,name=ref,proto3" json:"ref,omitempty"`
	Targets  []int32     `protobuf:"varint,6,rep,packed,name=targets,proto3" json:"targets,omitempty"`
	Score    int32       `protobuf:"varint,7,opt,name=score,proto3" json:"score,omitempty"`
	Iszimo   bool        `protobuf:"varint,8,opt,name=iszimo,proto3" json:"iszimo,omitempty"`
}

func (x *ActionData) Reset() {
	*x = ActionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionData) ProtoMessage() {}

func (x *ActionData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionData.ProtoReflect.Descriptor instead.
func (*ActionData) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{14}
}

func (x *ActionData) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ActionData) GetOwner() *Seat {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *ActionData) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ActionData) GetPayTimes() int32 {
	if x != nil {
		return x.PayTimes
	}
	return 0
}

func (x *ActionData) GetRef() *ActionData {
	if x != nil {
		return x.Ref
	}
	return nil
}

func (x *ActionData) GetTargets() []int32 {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *ActionData) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ActionData) GetIszimo() bool {
	if x != nil {
		return x.Iszimo
	}
	return false
}

type QiangGangData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TurnSeat *Seat `protobuf:"bytes,1,opt,name=turnSeat,proto3" json:"turnSeat,omitempty"`
	SeatData *Seat `protobuf:"bytes,2,opt,name=seatData,proto3" json:"seatData,omitempty"`
	Pai      int32 `protobuf:"varint,3,opt,name=pai,proto3" json:"pai,omitempty"`
	IsValid  bool  `protobuf:"varint,4,opt,name=isValid,proto3" json:"isValid,omitempty"`
}

func (x *QiangGangData) Reset() {
	*x = QiangGangData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QiangGangData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QiangGangData) ProtoMessage() {}

func (x *QiangGangData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QiangGangData.ProtoReflect.Descriptor instead.
func (*QiangGangData) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{15}
}

func (x *QiangGangData) GetTurnSeat() *Seat {
	if x != nil {
		return x.TurnSeat
	}
	return nil
}

func (x *QiangGangData) GetSeatData() *Seat {
	if x != nil {
		return x.SeatData
	}
	return nil
}

func (x *QiangGangData) GetPai() int32 {
	if x != nil {
		return x.Pai
	}
	return 0
}

func (x *QiangGangData) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

type Seat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid           int64               `protobuf:"varint,1,opt,name=userid,proto3" json:"userid,omitempty"`
	Score            int32               `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	Name             string              `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Ready            bool                `protobuf:"varint,4,opt,name=ready,proto3" json:"ready,omitempty"`
	Seatindex        int32               `protobuf:"varint,5,opt,name=seatindex,proto3" json:"seatindex"`
	NumZiMo          int32               `protobuf:"varint,6,opt,name=numZiMo,proto3" json:"numZiMo,omitempty"`
	NumJiePao        int32               `protobuf:"varint,7,opt,name=numJiePao,proto3" json:"numJiePao,omitempty"`
	NumDianPao       int32               `protobuf:"varint,8,opt,name=numDianPao,proto3" json:"numDianPao,omitempty"`
	NumAnGang        int32               `protobuf:"varint,9,opt,name=numAnGang,proto3" json:"numAnGang,omitempty"`
	NumMingGang      int32               `protobuf:"varint,10,opt,name=numMingGang,proto3" json:"numMingGang,omitempty"`
	NumChaJiao       int32               `protobuf:"varint,11,opt,name=numChaJiao,proto3" json:"numChaJiao,omitempty"`
	Ip               string              `protobuf:"bytes,12,opt,name=ip,proto3" json:"ip,omitempty"`
	Online           bool                `protobuf:"varint,13,opt,name=online,proto3" json:"online,omitempty"`
	Game             *GameData           `protobuf:"bytes,14,opt,name=game,proto3" json:"game,omitempty"`
	Holds            []int32             `protobuf:"varint,15,rep,packed,name=holds,proto3" json:"holds,omitempty"`
	Folds            []int32             `protobuf:"varint,16,rep,packed,name=folds,proto3" json:"folds,omitempty"`
	Angangs          []int32             `protobuf:"varint,17,rep,packed,name=angangs,proto3" json:"angangs,omitempty"`
	Diang            []int32             `protobuf:"varint,18,rep,packed,name=diang,proto3" json:"diang,omitempty"`
	Wangangs         []int32             `protobuf:"varint,19,rep,packed,name=wangangs,proto3" json:"wangangs,omitempty"`
	Pengs            []int32             `protobuf:"varint,20,rep,packed,name=pengs,proto3" json:"pengs,omitempty"`
	Que              int32               `protobuf:"varint,21,opt,name=que,proto3" json:"que,omitempty"`
	Huanpais         []int32             `protobuf:"varint,22,rep,packed,name=huanpais,proto3" json:"huanpais,omitempty"`
	CountMap         map[int32]int32     `protobuf:"bytes,23,rep,name=countMap,proto3" json:"countMap,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	TingMap          map[int32]*TingData `protobuf:"bytes,24,rep,name=tingMap,proto3" json:"tingMap,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Pattern          string              `protobuf:"bytes,25,opt,name=pattern,proto3" json:"pattern,omitempty"`
	CanGang          bool                `protobuf:"varint,26,opt,name=canGang,proto3" json:"canGang,omitempty"`
	GangPai          []int32             `protobuf:"varint,27,rep,packed,name=gangPai,proto3" json:"gangPai,omitempty"`
	CanPeng          bool                `protobuf:"varint,28,opt,name=canPeng,proto3" json:"canPeng,omitempty"`
	CanHu            bool                `protobuf:"varint,29,opt,name=canHu,proto3" json:"canHu,omitempty"`
	CanChuPai        bool                `protobuf:"varint,30,opt,name=canChuPai,proto3" json:"canChuPai,omitempty"`
	GuoHuFan         int32               `protobuf:"varint,31,opt,name=guoHuFan,proto3" json:"guoHuFan,omitempty"`
	Hued             bool                `protobuf:"varint,32,opt,name=hued,proto3" json:"hued,omitempty"`
	Iszimo           bool                `protobuf:"varint,33,opt,name=iszimo,proto3" json:"iszimo,omitempty"`
	IsGangHu         bool                `protobuf:"varint,34,opt,name=isGangHu,proto3" json:"isGangHu,omitempty"`
	IsMenQing        bool                `protobuf:"varint,35,opt,name=isMenQing,proto3" json:"isMenQing,omitempty"`
	IsZhongZhang     bool                `protobuf:"varint,36,opt,name=isZhongZhang,proto3" json:"isZhongZhang,omitempty"`
	IsJinGouHu       bool                `protobuf:"varint,37,opt,name=isJinGouHu,proto3" json:"isJinGouHu,omitempty"`
	IsQiangGangHu    bool                `protobuf:"varint,38,opt,name=isQiangGangHu,proto3" json:"isQiangGangHu,omitempty"`
	IsHaiDiHu        bool                `protobuf:"varint,39,opt,name=isHaiDiHu,proto3" json:"isHaiDiHu,omitempty"`
	IsTianHu         bool                `protobuf:"varint,40,opt,name=isTianHu,proto3" json:"isTianHu,omitempty"`
	IsDiHu           bool                `protobuf:"varint,41,opt,name=isDiHu,proto3" json:"isDiHu,omitempty"`
	Qingyise         bool                `protobuf:"varint,42,opt,name=qingyise,proto3" json:"qingyise,omitempty"`
	Actions          []*ActionData       `protobuf:"bytes,43,rep,name=actions,proto3" json:"actions,omitempty"`
	Fan              int32               `protobuf:"varint,44,opt,name=fan,proto3" json:"fan,omitempty"`
	LastFangGangSeat int32               `protobuf:"varint,45,opt,name=lastFangGangSeat,proto3" json:"lastFangGangSeat,omitempty"`
	Numofgen         int32               `protobuf:"varint,46,opt,name=numofgen,proto3" json:"numofgen,omitempty"`
	Diangangs        []int32             `protobuf:"varint,47,rep,packed,name=diangangs,proto3" json:"diangangs,omitempty"`
}

func (x *Seat) Reset() {
	*x = Seat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Seat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Seat) ProtoMessage() {}

func (x *Seat) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Seat.ProtoReflect.Descriptor instead.
func (*Seat) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{16}
}

func (x *Seat) GetUserid() int64 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *Seat) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Seat) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Seat) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *Seat) GetSeatindex() int32 {
	if x != nil {
		return x.Seatindex
	}
	return 0
}

func (x *Seat) GetNumZiMo() int32 {
	if x != nil {
		return x.NumZiMo
	}
	return 0
}

func (x *Seat) GetNumJiePao() int32 {
	if x != nil {
		return x.NumJiePao
	}
	return 0
}

func (x *Seat) GetNumDianPao() int32 {
	if x != nil {
		return x.NumDianPao
	}
	return 0
}

func (x *Seat) GetNumAnGang() int32 {
	if x != nil {
		return x.NumAnGang
	}
	return 0
}

func (x *Seat) GetNumMingGang() int32 {
	if x != nil {
		return x.NumMingGang
	}
	return 0
}

func (x *Seat) GetNumChaJiao() int32 {
	if x != nil {
		return x.NumChaJiao
	}
	return 0
}

func (x *Seat) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Seat) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *Seat) GetGame() *GameData {
	if x != nil {
		return x.Game
	}
	return nil
}

func (x *Seat) GetHolds() []int32 {
	if x != nil {
		return x.Holds
	}
	return nil
}

func (x *Seat) GetFolds() []int32 {
	if x != nil {
		return x.Folds
	}
	return nil
}

func (x *Seat) GetAngangs() []int32 {
	if x != nil {
		return x.Angangs
	}
	return nil
}

func (x *Seat) GetDiang() []int32 {
	if x != nil {
		return x.Diang
	}
	return nil
}

func (x *Seat) GetWangangs() []int32 {
	if x != nil {
		return x.Wangangs
	}
	return nil
}

func (x *Seat) GetPengs() []int32 {
	if x != nil {
		return x.Pengs
	}
	return nil
}

func (x *Seat) GetQue() int32 {
	if x != nil {
		return x.Que
	}
	return 0
}

func (x *Seat) GetHuanpais() []int32 {
	if x != nil {
		return x.Huanpais
	}
	return nil
}

func (x *Seat) GetCountMap() map[int32]int32 {
	if x != nil {
		return x.CountMap
	}
	return nil
}

func (x *Seat) GetTingMap() map[int32]*TingData {
	if x != nil {
		return x.TingMap
	}
	return nil
}

func (x *Seat) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

func (x *Seat) GetCanGang() bool {
	if x != nil {
		return x.CanGang
	}
	return false
}

func (x *Seat) GetGangPai() []int32 {
	if x != nil {
		return x.GangPai
	}
	return nil
}

func (x *Seat) GetCanPeng() bool {
	if x != nil {
		return x.CanPeng
	}
	return false
}

func (x *Seat) GetCanHu() bool {
	if x != nil {
		return x.CanHu
	}
	return false
}

func (x *Seat) GetCanChuPai() bool {
	if x != nil {
		return x.CanChuPai
	}
	return false
}

func (x *Seat) GetGuoHuFan() int32 {
	if x != nil {
		return x.GuoHuFan
	}
	return 0
}

func (x *Seat) GetHued() bool {
	if x != nil {
		return x.Hued
	}
	return false
}

func (x *Seat) GetIszimo() bool {
	if x != nil {
		return x.Iszimo
	}
	return false
}

func (x *Seat) GetIsGangHu() bool {
	if x != nil {
		return x.IsGangHu
	}
	return false
}

func (x *Seat) GetIsMenQing() bool {
	if x != nil {
		return x.IsMenQing
	}
	return false
}

func (x *Seat) GetIsZhongZhang() bool {
	if x != nil {
		return x.IsZhongZhang
	}
	return false
}

func (x *Seat) GetIsJinGouHu() bool {
	if x != nil {
		return x.IsJinGouHu
	}
	return false
}

func (x *Seat) GetIsQiangGangHu() bool {
	if x != nil {
		return x.IsQiangGangHu
	}
	return false
}

func (x *Seat) GetIsHaiDiHu() bool {
	if x != nil {
		return x.IsHaiDiHu
	}
	return false
}

func (x *Seat) GetIsTianHu() bool {
	if x != nil {
		return x.IsTianHu
	}
	return false
}

func (x *Seat) GetIsDiHu() bool {
	if x != nil {
		return x.IsDiHu
	}
	return false
}

func (x *Seat) GetQingyise() bool {
	if x != nil {
		return x.Qingyise
	}
	return false
}

func (x *Seat) GetActions() []*ActionData {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *Seat) GetFan() int32 {
	if x != nil {
		return x.Fan
	}
	return 0
}

func (x *Seat) GetLastFangGangSeat() int32 {
	if x != nil {
		return x.LastFangGangSeat
	}
	return 0
}

func (x *Seat) GetNumofgen() int32 {
	if x != nil {
		return x.Numofgen
	}
	return 0
}

func (x *Seat) GetDiangangs() []int32 {
	if x != nil {
		return x.Diangangs
	}
	return nil
}

type GameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conf             *RoomConf      `protobuf:"bytes,1,opt,name=conf,proto3" json:"conf,omitempty"`
	Uuid             string         `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	GameIndex        int32          `protobuf:"varint,3,opt,name=gameIndex,proto3" json:"gameIndex,omitempty"`
	Button           int32          `protobuf:"varint,4,opt,name=button,proto3" json:"button,omitempty"`
	Mahjongs         []int32        `protobuf:"varint,5,rep,packed,name=mahjongs,proto3" json:"mahjongs,omitempty"`
	CurrentIndex     int32          `protobuf:"varint,6,opt,name=currentIndex,proto3" json:"currentIndex,omitempty"`
	GameSeats        []*Seat        `protobuf:"bytes,7,rep,name=gameSeats,proto3" json:"gameSeats,omitempty"`
	NumOfQue         int32          `protobuf:"varint,8,opt,name=numOfQue,proto3" json:"numOfQue,omitempty"`
	Turn             int32          `protobuf:"varint,9,opt,name=turn,proto3" json:"turn,omitempty"`
	ChuPai           int32          `protobuf:"varint,10,opt,name=chuPai,proto3" json:"chuPai,omitempty"`
	State            string         `protobuf:"bytes,11,opt,name=state,proto3" json:"state,omitempty"`
	FirstHupai       int32          `protobuf:"varint,12,opt,name=firstHupai,proto3" json:"firstHupai,omitempty"`
	Yipaoduoxiang    int32          `protobuf:"varint,13,opt,name=yipaoduoxiang,proto3" json:"yipaoduoxiang,omitempty"`
	Fangpaoshumu     int32          `protobuf:"varint,14,opt,name=fangpaoshumu,proto3" json:"fangpaoshumu,omitempty"`
	ActionList       []int32        `protobuf:"varint,15,rep,packed,name=actionList,proto3" json:"actionList,omitempty"`
	HupaiList        []int32        `protobuf:"varint,16,rep,packed,name=hupaiList,proto3" json:"hupaiList,omitempty"`
	ChupaiCnt        int32          `protobuf:"varint,17,opt,name=chupaiCnt,proto3" json:"chupaiCnt,omitempty"`
	HuanpaiMethod    int32          `protobuf:"varint,18,opt,name=huanpaiMethod,proto3" json:"huanpaiMethod,omitempty"`
	QiangGangContext *QiangGangData `protobuf:"bytes,19,opt,name=qiangGangContext,proto3" json:"qiangGangContext,omitempty"`
	LastHuPaiSeat    int32          `protobuf:"varint,20,opt,name=lastHuPaiSeat,proto3" json:"lastHuPaiSeat,omitempty"`
	LastFangGangSeat int32          `protobuf:"varint,21,opt,name=lastFangGangSeat,proto3" json:"lastFangGangSeat,omitempty"`
	BaseInfoJson     string         `protobuf:"bytes,22,opt,name=baseInfoJson,proto3" json:"baseInfoJson,omitempty"`
}

func (x *GameData) Reset() {
	*x = GameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameData) ProtoMessage() {}

func (x *GameData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameData.ProtoReflect.Descriptor instead.
func (*GameData) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{17}
}

func (x *GameData) GetConf() *RoomConf {
	if x != nil {
		return x.Conf
	}
	return nil
}

func (x *GameData) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GameData) GetGameIndex() int32 {
	if x != nil {
		return x.GameIndex
	}
	return 0
}

func (x *GameData) GetButton() int32 {
	if x != nil {
		return x.Button
	}
	return 0
}

func (x *GameData) GetMahjongs() []int32 {
	if x != nil {
		return x.Mahjongs
	}
	return nil
}

func (x *GameData) GetCurrentIndex() int32 {
	if x != nil {
		return x.CurrentIndex
	}
	return 0
}

func (x *GameData) GetGameSeats() []*Seat {
	if x != nil {
		return x.GameSeats
	}
	return nil
}

func (x *GameData) GetNumOfQue() int32 {
	if x != nil {
		return x.NumOfQue
	}
	return 0
}

func (x *GameData) GetTurn() int32 {
	if x != nil {
		return x.Turn
	}
	return 0
}

func (x *GameData) GetChuPai() int32 {
	if x != nil {
		return x.ChuPai
	}
	return 0
}

func (x *GameData) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *GameData) GetFirstHupai() int32 {
	if x != nil {
		return x.FirstHupai
	}
	return 0
}

func (x *GameData) GetYipaoduoxiang() int32 {
	if x != nil {
		return x.Yipaoduoxiang
	}
	return 0
}

func (x *GameData) GetFangpaoshumu() int32 {
	if x != nil {
		return x.Fangpaoshumu
	}
	return 0
}

func (x *GameData) GetActionList() []int32 {
	if x != nil {
		return x.ActionList
	}
	return nil
}

func (x *GameData) GetHupaiList() []int32 {
	if x != nil {
		return x.HupaiList
	}
	return nil
}

func (x *GameData) GetChupaiCnt() int32 {
	if x != nil {
		return x.ChupaiCnt
	}
	return 0
}

func (x *GameData) GetHuanpaiMethod() int32 {
	if x != nil {
		return x.HuanpaiMethod
	}
	return 0
}

func (x *GameData) GetQiangGangContext() *QiangGangData {
	if x != nil {
		return x.QiangGangContext
	}
	return nil
}

func (x *GameData) GetLastHuPaiSeat() int32 {
	if x != nil {
		return x.LastHuPaiSeat
	}
	return 0
}

func (x *GameData) GetLastFangGangSeat() int32 {
	if x != nil {
		return x.LastFangGangSeat
	}
	return 0
}

func (x *GameData) GetBaseInfoJson() string {
	if x != nil {
		return x.BaseInfoJson
	}
	return ""
}

type Dr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndTime int64  `protobuf:"varint,1,opt,name=endTime,proto3" json:"endTime,omitempty"`
	States  []bool `protobuf:"varint,2,rep,packed,name=states,proto3" json:"states,omitempty"`
}

func (x *Dr) Reset() {
	*x = Dr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dr) ProtoMessage() {}

func (x *Dr) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dr.ProtoReflect.Descriptor instead.
func (*Dr) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{18}
}

func (x *Dr) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *Dr) GetStates() []bool {
	if x != nil {
		return x.States
	}
	return nil
}

type Room struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       string    `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Id         int32     `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	NumOfGames int32     `protobuf:"varint,3,opt,name=numOfGames,proto3" json:"numOfGames,omitempty"`
	CreateTime int64     `protobuf:"varint,4,opt,name=createTime,proto3" json:"createTime,omitempty"`
	NextButton int32     `protobuf:"varint,5,opt,name=nextButton,proto3" json:"nextButton,omitempty"`
	Seats      []*Seat   `protobuf:"bytes,6,rep,name=seats,proto3" json:"seats,omitempty"`
	Conf       *RoomConf `protobuf:"bytes,7,opt,name=conf,proto3" json:"conf,omitempty"`
	Dr         *Dr       `protobuf:"bytes,8,opt,name=dr,proto3" json:"dr,omitempty"`
}

func (x *Room) Reset() {
	*x = Room{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Room) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Room) ProtoMessage() {}

func (x *Room) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Room.ProtoReflect.Descriptor instead.
func (*Room) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{19}
}

func (x *Room) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Room) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Room) GetNumOfGames() int32 {
	if x != nil {
		return x.NumOfGames
	}
	return 0
}

func (x *Room) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Room) GetNextButton() int32 {
	if x != nil {
		return x.NextButton
	}
	return 0
}

func (x *Room) GetSeats() []*Seat {
	if x != nil {
		return x.Seats
	}
	return nil
}

func (x *Room) GetConf() *RoomConf {
	if x != nil {
		return x.Conf
	}
	return nil
}

func (x *Room) GetDr() *Dr {
	if x != nil {
		return x.Dr
	}
	return nil
}

type UserLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId    int32 `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	SeatIndex int32 `protobuf:"varint,2,opt,name=seatIndex,proto3" json:"seatIndex,omitempty"`
}

func (x *UserLocation) Reset() {
	*x = UserLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLocation) ProtoMessage() {}

func (x *UserLocation) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLocation.ProtoReflect.Descriptor instead.
func (*UserLocation) Descriptor() ([]byte, []int) {
	return file_protos_proto_rawDescGZIP(), []int{20}
}

func (x *UserLocation) GetRoomId() int32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *UserLocation) GetSeatIndex() int32 {
	if x != nil {
		return x.SeatIndex
	}
	return 0
}

var File_protos_proto protoreflect.FileDescriptor

var file_protos_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x22, 0xcd, 0x02, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4d,
	0x73, 0x67, 0x49, 0x64, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0d, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x6f,
	0x75, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x6f, 0x75,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0f, 0x6f, 0x66, 0x66, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x16, 0x6d,
	0x6a, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4d, 0x6a, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x6d, 0x6a, 0x52, 0x6f,
	0x6f, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42,
	0x05, 0x0a, 0x03, 0x61, 0x6e, 0x79, 0x22, 0x39, 0x0a, 0x13, 0x4d, 0x6a, 0x52, 0x6f, 0x6f, 0x6d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x67, 0x69,
	0x64, 0x22, 0x64, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0x21, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x6f, 0x75,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x22, 0x0a, 0x0e, 0x4f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0xa0,
	0x02, 0x0a, 0x0b, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67,
	0x12, 0x3e, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x41, 0x0a, 0x0f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x0e, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x17, 0x6d, 0x6a, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4d, 0x6a,
	0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x14, 0x6d, 0x6a, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x61, 0x6e,
	0x79, 0x22, 0xbe, 0x01, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x69,
	0x73, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x4e,
	0x65, 0x77, 0x22, 0x10, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4e, 0x0a, 0x14, 0x4d, 0x6a, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x74, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x99, 0x01, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x68,
	0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x1a,
	0x3a, 0x0a, 0x0c, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa4, 0x02, 0x0a, 0x08,
	0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x7a, 0x69, 0x6d, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x7a, 0x69, 0x6d, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x69, 0x61, 0x6e, 0x67, 0x64, 0x75, 0x69, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x6a, 0x69, 0x61, 0x6e, 0x67, 0x64, 0x75, 0x69, 0x12, 0x10, 0x0a, 0x03,
	0x68, 0x73, 0x7a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x68, 0x73, 0x7a, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x69, 0x61, 0x6e, 0x67, 0x61, 0x6e, 0x67, 0x68, 0x75, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x69, 0x61, 0x6e, 0x67, 0x61, 0x6e, 0x67, 0x68, 0x75, 0x61,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6e, 0x71, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x6d, 0x65, 0x6e, 0x71, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69,
	0x61, 0x6e, 0x64, 0x69, 0x68, 0x75, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x69,
	0x61, 0x6e, 0x64, 0x69, 0x68, 0x75, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x78, 0x46, 0x61, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x46, 0x61, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x6d, 0x61, 0x78, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x6d, 0x61, 0x78, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x22, 0x40, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x73, 0x22, 0x36, 0x0a, 0x08, 0x54, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x10, 0x0a, 0x03, 0x66, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x66,
	0x61, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x22, 0xe4, 0x01, 0x0a,
	0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x22, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x73, 0x7a, 0x69, 0x6d, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x7a,
	0x69, 0x6d, 0x6f, 0x22, 0x8f, 0x01, 0x0a, 0x0d, 0x51, 0x69, 0x61, 0x6e, 0x67, 0x47, 0x61, 0x6e,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x08, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x65, 0x61,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x08, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x65, 0x61, 0x74, 0x12,
	0x28, 0x0a, 0x08, 0x73, 0x65, 0x61, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x52,
	0x08, 0x73, 0x65, 0x61, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x61, 0x69,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x61, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x22, 0xd2, 0x0b, 0x0a, 0x04, 0x53, 0x65, 0x61, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x74, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x61, 0x74, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x5a, 0x69, 0x4d, 0x6f, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x5a, 0x69, 0x4d, 0x6f, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x4a, 0x69, 0x65, 0x50, 0x61, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x4a, 0x69, 0x65, 0x50, 0x61, 0x6f, 0x12, 0x1e, 0x0a, 0x0a,
	0x6e, 0x75, 0x6d, 0x44, 0x69, 0x61, 0x6e, 0x50, 0x61, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x44, 0x69, 0x61, 0x6e, 0x50, 0x61, 0x6f, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x75, 0x6d, 0x41, 0x6e, 0x47, 0x61, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x6e, 0x75, 0x6d, 0x41, 0x6e, 0x47, 0x61, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x75,
	0x6d, 0x4d, 0x69, 0x6e, 0x67, 0x47, 0x61, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x6e, 0x75, 0x6d, 0x4d, 0x69, 0x6e, 0x67, 0x47, 0x61, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a,
	0x6e, 0x75, 0x6d, 0x43, 0x68, 0x61, 0x4a, 0x69, 0x61, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x43, 0x68, 0x61, 0x4a, 0x69, 0x61, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x6f,
	0x6c, 0x64, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x68, 0x6f, 0x6c, 0x64, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x6c, 0x64, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x05, 0x66, 0x6f, 0x6c, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6e, 0x67, 0x61, 0x6e, 0x67,
	0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x61, 0x6e, 0x67, 0x61, 0x6e, 0x67, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x64, 0x69, 0x61, 0x6e, 0x67, 0x18, 0x12, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x05, 0x64, 0x69, 0x61, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x6e, 0x67, 0x61, 0x6e,
	0x67, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x77, 0x61, 0x6e, 0x67, 0x61, 0x6e,
	0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x6e, 0x67, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x05, 0x70, 0x65, 0x6e, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x75, 0x65, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x71, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x75,
	0x61, 0x6e, 0x70, 0x61, 0x69, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x68, 0x75,
	0x61, 0x6e, 0x70, 0x61, 0x69, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d,
	0x61, 0x70, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x33,
	0x0a, 0x07, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x2e, 0x54, 0x69,
	0x6e, 0x67, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x74, 0x69, 0x6e, 0x67,
	0x4d, 0x61, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x61, 0x6e, 0x47, 0x61, 0x6e, 0x67, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x63, 0x61, 0x6e, 0x47, 0x61, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x6e, 0x67, 0x50,
	0x61, 0x69, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x67, 0x61, 0x6e, 0x67, 0x50, 0x61,
	0x69, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x6e, 0x50, 0x65, 0x6e, 0x67, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x50, 0x65, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x61, 0x6e, 0x48, 0x75, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x61, 0x6e, 0x48,
	0x75, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x43, 0x68, 0x75, 0x50, 0x61, 0x69, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x43, 0x68, 0x75, 0x50, 0x61, 0x69, 0x12,
	0x1a, 0x0a, 0x08, 0x67, 0x75, 0x6f, 0x48, 0x75, 0x46, 0x61, 0x6e, 0x18, 0x1f, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x67, 0x75, 0x6f, 0x48, 0x75, 0x46, 0x61, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x75, 0x65, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x68, 0x75, 0x65, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x73, 0x7a, 0x69, 0x6d, 0x6f, 0x18, 0x21, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x69, 0x73, 0x7a, 0x69, 0x6d, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x47, 0x61, 0x6e,
	0x67, 0x48, 0x75, 0x18, 0x22, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x47, 0x61, 0x6e,
	0x67, 0x48, 0x75, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x4d, 0x65, 0x6e, 0x51, 0x69, 0x6e, 0x67,
	0x18, 0x23, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x4d, 0x65, 0x6e, 0x51, 0x69, 0x6e,
	0x67, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x5a, 0x68, 0x6f, 0x6e, 0x67, 0x5a, 0x68, 0x61, 0x6e,
	0x67, 0x18, 0x24, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x5a, 0x68, 0x6f, 0x6e, 0x67,
	0x5a, 0x68, 0x61, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x4a, 0x69, 0x6e, 0x47, 0x6f,
	0x75, 0x48, 0x75, 0x18, 0x25, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4a, 0x69, 0x6e,
	0x47, 0x6f, 0x75, 0x48, 0x75, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73, 0x51, 0x69, 0x61, 0x6e, 0x67,
	0x47, 0x61, 0x6e, 0x67, 0x48, 0x75, 0x18, 0x26, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73,
	0x51, 0x69, 0x61, 0x6e, 0x67, 0x47, 0x61, 0x6e, 0x67, 0x48, 0x75, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x73, 0x48, 0x61, 0x69, 0x44, 0x69, 0x48, 0x75, 0x18, 0x27, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x48, 0x61, 0x69, 0x44, 0x69, 0x48, 0x75, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x54,
	0x69, 0x61, 0x6e, 0x48, 0x75, 0x18, 0x28, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x54,
	0x69, 0x61, 0x6e, 0x48, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x44, 0x69, 0x48, 0x75, 0x18,
	0x29, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x44, 0x69, 0x48, 0x75, 0x12, 0x1a, 0x0a,
	0x08, 0x71, 0x69, 0x6e, 0x67, 0x79, 0x69, 0x73, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x71, 0x69, 0x6e, 0x67, 0x79, 0x69, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x2b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x61, 0x6e, 0x18, 0x2c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x66, 0x61, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73,
	0x74, 0x46, 0x61, 0x6e, 0x67, 0x47, 0x61, 0x6e, 0x67, 0x53, 0x65, 0x61, 0x74, 0x18, 0x2d, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x46, 0x61, 0x6e, 0x67, 0x47, 0x61, 0x6e,
	0x67, 0x53, 0x65, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x75, 0x6d, 0x6f, 0x66, 0x67, 0x65,
	0x6e, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x6f, 0x66, 0x67, 0x65,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x61, 0x6e, 0x67, 0x61, 0x6e, 0x67, 0x73, 0x18, 0x2f,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x64, 0x69, 0x61, 0x6e, 0x67, 0x61, 0x6e, 0x67, 0x73, 0x1a,
	0x3b, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4c, 0x0a, 0x0c,
	0x54, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe9, 0x05, 0x0a, 0x08, 0x47,
	0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52,
	0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x16, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x68, 0x6a, 0x6f,
	0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x68, 0x6a, 0x6f,
	0x6e, 0x67, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2a, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x53,
	0x65, 0x61, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65,
	0x61, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x75, 0x6d, 0x4f, 0x66, 0x51, 0x75, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x4f, 0x66, 0x51, 0x75, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x75, 0x72, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x75, 0x50, 0x61, 0x69, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x75, 0x50, 0x61, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x48, 0x75, 0x70, 0x61, 0x69, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x48, 0x75, 0x70, 0x61,
	0x69, 0x12, 0x24, 0x0a, 0x0d, 0x79, 0x69, 0x70, 0x61, 0x6f, 0x64, 0x75, 0x6f, 0x78, 0x69, 0x61,
	0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x79, 0x69, 0x70, 0x61, 0x6f, 0x64,
	0x75, 0x6f, 0x78, 0x69, 0x61, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x61, 0x6e, 0x67, 0x70,
	0x61, 0x6f, 0x73, 0x68, 0x75, 0x6d, 0x75, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x66,
	0x61, 0x6e, 0x67, 0x70, 0x61, 0x6f, 0x73, 0x68, 0x75, 0x6d, 0x75, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x68,
	0x75, 0x70, 0x61, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x10, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09,
	0x68, 0x75, 0x70, 0x61, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x75,
	0x70, 0x61, 0x69, 0x43, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x68,
	0x75, 0x70, 0x61, 0x69, 0x43, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x68, 0x75, 0x61, 0x6e, 0x70,
	0x61, 0x69, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x68, 0x75, 0x61, 0x6e, 0x70, 0x61, 0x69, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x41, 0x0a,
	0x10, 0x71, 0x69, 0x61, 0x6e, 0x67, 0x47, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x51, 0x69, 0x61, 0x6e, 0x67, 0x47, 0x61, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x10,
	0x71, 0x69, 0x61, 0x6e, 0x67, 0x47, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x48, 0x75, 0x50, 0x61, 0x69, 0x53, 0x65, 0x61,
	0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x48, 0x75, 0x50,
	0x61, 0x69, 0x53, 0x65, 0x61, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x46, 0x61,
	0x6e, 0x67, 0x47, 0x61, 0x6e, 0x67, 0x53, 0x65, 0x61, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x46, 0x61, 0x6e, 0x67, 0x47, 0x61, 0x6e, 0x67, 0x53, 0x65,
	0x61, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4a, 0x73,
	0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0x36, 0x0a, 0x02, 0x44, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0xf0,
	0x01, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6e,
	0x75, 0x6d, 0x4f, 0x66, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x6e, 0x75, 0x6d, 0x4f, 0x66, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6e,
	0x65, 0x78, 0x74, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x6e, 0x65, 0x78, 0x74, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x05, 0x73,
	0x65, 0x61, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x05, 0x73, 0x65, 0x61, 0x74, 0x73, 0x12,
	0x24, 0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x52,
	0x04, 0x63, 0x6f, 0x6e, 0x66, 0x12, 0x1a, 0x0a, 0x02, 0x64, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x44, 0x72, 0x52, 0x02, 0x64,
	0x72, 0x22, 0x44, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65,
	0x61, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x2a, 0x56, 0x0a, 0x05, 0x4d, 0x73, 0x67, 0x49, 0x64,
	0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x4d, 0x73, 0x67, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4d,
	0x73, 0x67, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x73,
	0x67, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x73,
	0x67, 0x4d, 0x6a, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x10, 0x04, 0x42,
	0x0b, 0x5a, 0x09, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_proto_rawDescOnce sync.Once
	file_protos_proto_rawDescData = file_protos_proto_rawDesc
)

func file_protos_proto_rawDescGZIP() []byte {
	file_protos_proto_rawDescOnce.Do(func() {
		file_protos_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_proto_rawDescData)
	})
	return file_protos_proto_rawDescData
}

var file_protos_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protos_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_protos_proto_goTypes = []interface{}{
	(MsgId)(0),                   // 0: protos.MsgId
	(*MsgRequest)(nil),           // 1: protos.MsgRequest
	(*MjRoomCreateRequest)(nil),  // 2: protos.MjRoomCreateRequest
	(*LoginRequest)(nil),         // 3: protos.LoginRequest
	(*LogoutRequest)(nil),        // 4: protos.LogoutRequest
	(*OfflineRequest)(nil),       // 5: protos.OfflineRequest
	(*MsgResponse)(nil),          // 6: protos.MsgResponse
	(*LoginResponse)(nil),        // 7: protos.LoginResponse
	(*LogoutResponse)(nil),       // 8: protos.LogoutResponse
	(*MjRoomCreateResponse)(nil), // 9: protos.MjRoomCreateResponse
	(*ChessConfigMultiple)(nil),  // 10: protos.ChessConfigMultiple
	(*ChessConfig)(nil),          // 11: protos.ChessConfig
	(*RoomConf)(nil),             // 12: protos.RoomConf
	(*DissolveData)(nil),         // 13: protos.DissolveData
	(*TingData)(nil),             // 14: protos.TingData
	(*ActionData)(nil),           // 15: protos.ActionData
	(*QiangGangData)(nil),        // 16: protos.QiangGangData
	(*Seat)(nil),                 // 17: protos.Seat
	(*GameData)(nil),             // 18: protos.GameData
	(*Dr)(nil),                   // 19: protos.Dr
	(*Room)(nil),                 // 20: protos.Room
	(*UserLocation)(nil),         // 21: protos.UserLocation
	nil,                          // 22: protos.ChessConfig.ChoicesEntry
	nil,                          // 23: protos.Seat.CountMapEntry
	nil,                          // 24: protos.Seat.TingMapEntry
}
var file_protos_proto_depIdxs = []int32{
	0,  // 0: protos.MsgRequest.msg_id:type_name -> protos.MsgId
	3,  // 1: protos.MsgRequest.login_request:type_name -> protos.LoginRequest
	4,  // 2: protos.MsgRequest.logout_request:type_name -> protos.LogoutRequest
	5,  // 3: protos.MsgRequest.offline_request:type_name -> protos.OfflineRequest
	2,  // 4: protos.MsgRequest.mj_room_create_request:type_name -> protos.MjRoomCreateRequest
	7,  // 5: protos.MsgResponse.login_response:type_name -> protos.LoginResponse
	8,  // 6: protos.MsgResponse.logout_response:type_name -> protos.LogoutResponse
	9,  // 7: protos.MsgResponse.mj_room_create_response:type_name -> protos.MjRoomCreateResponse
	22, // 8: protos.ChessConfig.choices:type_name -> protos.ChessConfig.ChoicesEntry
	17, // 9: protos.ActionData.owner:type_name -> protos.Seat
	15, // 10: protos.ActionData.ref:type_name -> protos.ActionData
	17, // 11: protos.QiangGangData.turnSeat:type_name -> protos.Seat
	17, // 12: protos.QiangGangData.seatData:type_name -> protos.Seat
	18, // 13: protos.Seat.game:type_name -> protos.GameData
	23, // 14: protos.Seat.countMap:type_name -> protos.Seat.CountMapEntry
	24, // 15: protos.Seat.tingMap:type_name -> protos.Seat.TingMapEntry
	15, // 16: protos.Seat.actions:type_name -> protos.ActionData
	12, // 17: protos.GameData.conf:type_name -> protos.RoomConf
	17, // 18: protos.GameData.gameSeats:type_name -> protos.Seat
	16, // 19: protos.GameData.qiangGangContext:type_name -> protos.QiangGangData
	17, // 20: protos.Room.seats:type_name -> protos.Seat
	12, // 21: protos.Room.conf:type_name -> protos.RoomConf
	19, // 22: protos.Room.dr:type_name -> protos.Dr
	14, // 23: protos.Seat.TingMapEntry.value:type_name -> protos.TingData
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_protos_proto_init() }
func file_protos_proto_init() {
	if File_protos_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MjRoomCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfflineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MjRoomCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChessConfigMultiple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChessConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DissolveData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TingData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QiangGangData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Seat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Room); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protos_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*MsgRequest_LoginRequest)(nil),
		(*MsgRequest_LogoutRequest)(nil),
		(*MsgRequest_OfflineRequest)(nil),
		(*MsgRequest_MjRoomCreateRequest)(nil),
	}
	file_protos_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*MsgResponse_LoginResponse)(nil),
		(*MsgResponse_LogoutResponse)(nil),
		(*MsgResponse_MjRoomCreateResponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_proto_goTypes,
		DependencyIndexes: file_protos_proto_depIdxs,
		EnumInfos:         file_protos_proto_enumTypes,
		MessageInfos:      file_protos_proto_msgTypes,
	}.Build()
	File_protos_proto = out.File
	file_protos_proto_rawDesc = nil
	file_protos_proto_goTypes = nil
	file_protos_proto_depIdxs = nil
}
